"use strict";var CategoryModel=require("../models/category"),uploadMedia=require("../middleware/cloudinaryConfig"),createCategory=function(r,t){var a,n,s;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:if(a=r.body.title,console.log("create Ctegory"),a){e.next=4;break}return e.abrupt("return",t.status(400).json({message:"Title is required"}));case 4:return e.prev=4,e.next=7,regeneratorRuntime.awrap(uploadMedia(r.file));case 7:return n=e.sent,console.log(n),e.next=11,regeneratorRuntime.awrap(CategoryModel.create({title:r.body.title,imageUrl:n.secure_url}));case 11:s=e.sent,t.json(s),e.next=19;break;case 15:e.prev=15,e.t0=e.catch(4),console.error(e.t0),t.status(500).json({message:"Server Error"});case 19:case"end":return e.stop()}},null,null,[[4,15]])},getAllCategory=function(e,r){var t;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,e.next=3,regeneratorRuntime.awrap(CategoryModel.find({}));case 3:if(t=e.sent){e.next=6;break}return e.abrupt("return",r.status(404).json({msg:"No Categories Found"}));case 6:r.status(200).json({success:!0,totaleCategory:t.length,categories:t}),e.next=12;break;case 9:e.prev=9,e.t0=e.catch(0),r.status(500).json({msg:"Error in get All category Api",error:e.t0});case 12:case"end":return e.stop()}},null,null,[[0,9]])},UpdateCategory=function(r,t){var a,n,s,o;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,a=r.params.id,n=r.body,s=n.title,o=n.imageUrl,e.next=5,regeneratorRuntime.awrap(CategoryModel.findByIdAndUpdate(a,{title:s,imageUrl:o},{new:!0}));case 5:if(e.sent){e.next=8;break}return e.abrupt("return",t.status(500).json({msg:"no category Found"}));case 8:t.status(200).json({msg:"category updated successfully"}),e.next=14;break;case 11:e.prev=11,e.t0=e.catch(0),t.status(500).json({msg:"Error in update category Api",error:e.t0});case 14:case"end":return e.stop()}},null,null,[[0,11]])},deletecategory=function(r,t){var a;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:if(e.prev=0,a=r.params.id){e.next=4;break}return e.abrupt("return",t.status(500).json({msg:"please provide category ID"}));case 4:return e.next=6,regeneratorRuntime.awrap(CategoryModel.findById(a));case 6:return e.sent||t.status(500).json({msg:"No category found with this ID"}),e.next=10,regeneratorRuntime.awrap(CategoryModel.findByIdAndDelete(a));case 10:t.status(200).json({msg:"category Deleted successfully"}),e.next=16;break;case 13:e.prev=13,e.t0=e.catch(0),t.status(500).json({msg:"Error in Delete category Api",error:e.t0});case 16:case"end":return e.stop()}},null,null,[[0,13]])};module.exports={createCategory:createCategory,getAllCategory:getAllCategory,UpdateCategory:UpdateCategory,deletecategory:deletecategory};
//# sourceMappingURL=categoryController.min.js.map
