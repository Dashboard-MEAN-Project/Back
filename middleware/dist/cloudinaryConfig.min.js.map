{"version":3,"sources":["cloudinaryConfig.js"],"names":["cloudinaryModule","require","config","v2","cloudinary","cloud_name","api_key","api_secret","uploadMedia","file","uploadRes","regeneratorRuntime","async","_context","prev","next","console","log","path","process","env","CLOUDINARY_CLOUD_NAME","awrap","uploader","upload","resource_type","sent","abrupt","stop","module","exports"],"mappings":"aAmBA,IAAMA,iBAAmBC,QAAQ,cAEjCA,WAAkBC,iBAAlBC,GAAAF,QAAQ,UAAUC,SAClBE,WAAWF,OAAO,CACfG,WAAY,YACXC,QAAS,kBACTC,WAAW,gCAeG,IAAAC,YAAA,SAAAC,GAAA,IAAAC,EAAA,OAAAC,mBAAAC,MAAA,SAAAC,GAAA,OAAA,OAAAA,EAAAC,KAAAD,EAAAE,MAAA,KAAA,EAAA,GAAAC,QAAAC,IAAA,aAAAR,EAAAS,MAAAF,QAAAC,IAAAE,QAAAC,IAAAC,sBAAA,YACdZ,EAAAS,KADc,OAAAL,EAAAE,KAAA,EAAAJ,mBAAAW,MAOYlB,WAAWmB,SAASC,OAAOf,EAAKS,KAAM,CAPlDO,cAAA,UAAAZ,EAAAE,KAAA,EAAA,MAAA,KAAA,EAAA,GAONL,EAPMG,EAAAa,KAAA,OAAAb,EAAAc,OAAA,SAAAjB,GAAAG,EAAAE,KAAA,EAAA,MAAA,KAAA,EAAA,OAAAF,EAAAc,OAAA,UASVF,GATU,KAAA,EAAA,IAAA,MAAA,OAAAZ,EAAAe,WAkBlBC,OAAOC,QAAQtB","file":"cloudinaryConfig.min.js","sourcesContent":["// const cloudinary = require('cloudinary')\r\n\r\n// const dotenv = require('dotenv')\r\n// cloudinary.config({\r\n//     cloud_name:process.env.CLOUDINARY_CLOUD_NAME,\r\n//     api_key:process.env.CLOUDINARY_API_KEY,\r\n//     api_secret:process.env.CLOUDINARY_API_SECRET \r\n// })\r\n\r\n\r\n// exports.uploads = (file) =>{\r\n//     return new Promise(resolve => {\r\n//     cloudinary.uploader.upload(file, (result) =>{\r\n//     resolve({url: result.url, id: result.public_id})\r\n//     }, {resource_type: \"auto\"})\r\n//     })\r\n// }\r\n\r\n\r\nconst cloudinaryModule = require('cloudinary');\r\nconst cloudinary = cloudinaryModule.v2;\r\nrequire('dotenv').config()\r\ncloudinary.config({ \r\n   cloud_name: \"dpagwp2y8\",\r\n    api_key: \"222669724394958\",\r\n    api_secret:\"EZ0r6NZqZ49PICGHAv7uQuC-dmg\"\r\n  });\r\n\r\n\r\n// const uploadToCloudinary = async (file) => {\r\n//       console.log(\"cloudinary\",file.path)\r\n//     let result= await cloudinary.uploader.upload(file.path,{\r\n//         folder: 'samples',\r\n//         use_filename: true,\r\n//         resource_type: 'raw'\r\n//         }\r\n// };\r\n// module.exports = {\r\n//     uploadToCloudinary\r\n// };\r\nlet uploadMedia = async(file) => {\r\n    // if()\r\n  console.log(\"file path \", file.path);\r\n  console.log(process.env.CLOUDINARY_CLOUD_NAME+\" jghghgh\")\r\n    if (file.path) {\r\n      \r\n      // if (isImageFile || isVideoFile) {              \r\n      const uploadRes = await cloudinary.uploader.upload(file.path, {\r\n        // use_filename: true,\r\n        resource_type: 'auto'\r\n      });\r\n\r\n      if (uploadRes) {\r\n        return uploadRes;\r\n      }\r\n  }\r\n    return false;\r\n}\r\nmodule.exports=uploadMedia"]}