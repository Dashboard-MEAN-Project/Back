{"version":3,"sources":["cloudinaryConfig.js"],"names":["cloudinaryModule","require","cloudinary","v2","config","cloud_name","api_key","api_secret","uploadMedia","file","console","log","path","process","env","CLOUDINARY_CLOUD_NAME","uploader","upload","resource_type","uploadRes","module","exports"],"mappings":";;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA,IAAMA,gBAAgB,GAAGC,OAAO,CAAC,YAAD,CAAhC;;AACA,IAAMC,UAAU,GAAGF,gBAAgB,CAACG,EAApC;;AACAF,OAAO,CAAC,QAAD,CAAP,CAAkBG,MAAlB;;AACAF,UAAU,CAACE,MAAX,CAAkB;AACfC,EAAAA,UAAU,EAAE,WADG;AAEdC,EAAAA,OAAO,EAAE,iBAFK;AAGdC,EAAAA,UAAU,EAAC;AAHG,CAAlB,E,CAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAIC,WAAW,GAAG,SAAdA,WAAc,CAAMC,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AACd;AACFC,UAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BF,IAAI,CAACG,IAA/B;AACAF,UAAAA,OAAO,CAACC,GAAR,CAAYE,OAAO,CAACC,GAAR,CAAYC,qBAAZ,GAAkC,UAA9C;;AAHgB,eAIVN,IAAI,CAACG,IAJK;AAAA;AAAA;AAAA;;AAAA;AAAA,0CAOYV,UAAU,CAACc,QAAX,CAAoBC,MAApB,CAA2BR,IAAI,CAACG,IAAhC,EAAsC;AAC5D;AACAM,YAAAA,aAAa,EAAE;AAF6C,WAAtC,CAPZ;;AAAA;AAONC,UAAAA,SAPM;;AAAA,eAYRA,SAZQ;AAAA;AAAA;AAAA;;AAAA,2CAaHA,SAbG;;AAAA;AAAA,2CAgBP,KAhBO;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAlB;;AAkBAC,MAAM,CAACC,OAAP,GAAeb,WAAf","sourcesContent":["// const cloudinary = require('cloudinary')\r\n\r\n// const dotenv = require('dotenv')\r\n// cloudinary.config({\r\n//     cloud_name:process.env.CLOUDINARY_CLOUD_NAME,\r\n//     api_key:process.env.CLOUDINARY_API_KEY,\r\n//     api_secret:process.env.CLOUDINARY_API_SECRET \r\n// })\r\n\r\n\r\n// exports.uploads = (file) =>{\r\n//     return new Promise(resolve => {\r\n//     cloudinary.uploader.upload(file, (result) =>{\r\n//     resolve({url: result.url, id: result.public_id})\r\n//     }, {resource_type: \"auto\"})\r\n//     })\r\n// }\r\n\r\n\r\nconst cloudinaryModule = require('cloudinary');\r\nconst cloudinary = cloudinaryModule.v2;\r\nrequire('dotenv').config()\r\ncloudinary.config({ \r\n   cloud_name: \"dpagwp2y8\",\r\n    api_key: \"222669724394958\",\r\n    api_secret:\"EZ0r6NZqZ49PICGHAv7uQuC-dmg\"\r\n  });\r\n\r\n\r\n// const uploadToCloudinary = async (file) => {\r\n//       console.log(\"cloudinary\",file.path)\r\n//     let result= await cloudinary.uploader.upload(file.path,{\r\n//         folder: 'samples',\r\n//         use_filename: true,\r\n//         resource_type: 'raw'\r\n//         }\r\n// };\r\n// module.exports = {\r\n//     uploadToCloudinary\r\n// };\r\nlet uploadMedia = async(file) => {\r\n    // if()\r\n  console.log(\"file path \", file.path);\r\n  console.log(process.env.CLOUDINARY_CLOUD_NAME+\" jghghgh\")\r\n    if (file.path) {\r\n      \r\n      // if (isImageFile || isVideoFile) {              \r\n      const uploadRes = await cloudinary.uploader.upload(file.path, {\r\n        // use_filename: true,\r\n        resource_type: 'auto'\r\n      });\r\n\r\n      if (uploadRes) {\r\n        return uploadRes;\r\n      }\r\n  }\r\n    return false;\r\n}\r\nmodule.exports=uploadMedia"],"file":"cloudinaryConfig.dev.js"}